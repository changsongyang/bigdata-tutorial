(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{488:function(t,a,s){"use strict";s.r(a);var n=s(14),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"kafka-生产者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kafka-生产者"}},[t._v("#")]),t._v(" Kafka 生产者")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E4%B8%80%E5%8F%91%E9%80%81%E6%B5%81%E7%A8%8B"}},[t._v("一、发送流程")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#kafka-%E8%A6%81%E7%B4%A0"}},[t._v("Kafka 要素")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#kafka-%E5%8F%91%E9%80%81%E6%B5%81%E7%A8%8B"}},[t._v("Kafka 发送流程")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E4%BA%8C%E5%8F%91%E9%80%81%E6%96%B9%E5%BC%8F"}},[t._v("二、发送方式")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E5%BC%82%E6%AD%A5%E5%8F%91%E9%80%81"}},[t._v("异步发送")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%90%8C%E6%AD%A5%E5%8F%91%E9%80%81"}},[t._v("同步发送")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%BC%82%E6%AD%A5%E5%9B%9E%E8%B0%83%E5%8F%91%E9%80%81"}},[t._v("异步回调发送")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E4%B8%89%E7%94%9F%E4%BA%A7%E8%80%85%E7%9A%84%E9%85%8D%E7%BD%AE"}},[t._v("三、生产者的配置")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%9B%9B%E5%BA%8F%E5%88%97%E5%8C%96%E5%99%A8"}},[t._v("四、序列化器")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E4%BA%94%E5%88%86%E5%8C%BA"}},[t._v("五、分区")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99"}},[t._v("参考资料")])])]),t._v(" "),s("h2",{attrs:{id:"一、发送流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、发送流程"}},[t._v("#")]),t._v(" 一、发送流程")]),t._v(" "),s("h3",{attrs:{id:"kafka-要素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kafka-要素"}},[t._v("#")]),t._v(" Kafka 要素")]),t._v(" "),s("p",[t._v("Kafka 发送的对象叫做 "),s("code",[t._v("ProducerRecord")]),t._v(" ，它有 4 个关键参数：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Topic")]),t._v(" - 主题")]),t._v(" "),s("li",[s("code",[t._v("Partition")]),t._v(" - 分区（非必填）")]),t._v(" "),s("li",[s("code",[t._v("Key")]),t._v(" - 键（非必填）")]),t._v(" "),s("li",[s("code",[t._v("Value")]),t._v(" - 值")])]),t._v(" "),s("h3",{attrs:{id:"kafka-发送流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kafka-发送流程"}},[t._v("#")]),t._v(" Kafka 发送流程")]),t._v(" "),s("p",[t._v("Kafka 生产者发送消息流程：")]),t._v(" "),s("p",[t._v("（1）"),s("strong",[t._v("序列化")]),t._v(" - 发送前，生产者要先把键和值序列化。")]),t._v(" "),s("p",[t._v("（2）"),s("strong",[t._v("分区")]),t._v(" - 数据被传给分区器。分区器决定了一个消息被分配到哪个分区。")]),t._v(" "),s("ul",[s("li",[t._v("如果 "),s("code",[t._v("ProducerRecord")]),t._v(" 指定了 Partition，则分区器什么也不做，否则分区器会选择一个分区。")]),t._v(" "),s("li",[t._v("如果传入的是 key，则通过分区器选择一个分区来保存这个消息；")]),t._v(" "),s("li",[t._v("如果 key 和 Partition 都没有指定，则会默认生成一个 key。")])]),t._v(" "),s("p",[t._v("（3）"),s("strong",[t._v("批次传输")]),t._v(" - 接着，这条记录会被添加到一个队列批次中。这个队列的所有消息都会发送到相同的主题和分区上。会由一个独立线程负责将这些记录批次发送到相应 Broker 上。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("批次，就是一组消息，这些消息属于同一个主题和分区")]),t._v("。")]),t._v(" "),s("li",[t._v("发送时，会把消息分成批次传输，如果每一个消息发送一次，会导致大量的网路开销。")])]),t._v(" "),s("p",[t._v("（4）"),s("strong",[t._v("响应")]),t._v(" - 服务器收到消息会返回一个响应。")]),t._v(" "),s("ul",[s("li",[t._v("如果"),s("strong",[t._v("成功")]),t._v("，则返回一个 "),s("code",[t._v("RecordMetaData")]),t._v(" 对象，它包含了主题、分区、偏移量；")]),t._v(" "),s("li",[t._v("如果"),s("strong",[t._v("失败")]),t._v("，则返回一个错误。生产者在收到错误后，可以进行重试，重试次数可以在配置中指定。失败一定次数后，就返回错误消息。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://dunwu.test.upcdn.net/snap/20200528224323.png",alt:"img"}})]),t._v(" "),s("p",[t._v("生产者在向 broker 发送消息时是怎么确定向哪一个 broker 发送消息？")]),t._v(" "),s("ul",[s("li",[t._v("生产者会向任意 broker 发送一个元数据请求（"),s("code",[t._v("MetadataRequest")]),t._v("），获取到每一个分区对应的 leader 信息，并缓存到本地。")]),t._v(" "),s("li",[t._v("生产者在发送消息时，会指定 Partition 或者通过 key 得到到一个 Partition，然后根据 Partition 从缓存中获取相应的 leader 信息。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://dunwu.test.upcdn.net/snap/20200621113043.png",alt:"img"}})]),t._v(" "),s("h2",{attrs:{id:"二、发送方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、发送方式"}},[t._v("#")]),t._v(" 二、发送方式")]),t._v(" "),s("h3",{attrs:{id:"异步发送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步发送"}},[t._v("#")]),t._v(" 异步发送")]),t._v(" "),s("p",[t._v("直接发送消息，不关心消息是否到达。")]),t._v(" "),s("p",[t._v("这种方式吞吐量最高，但有小概率会丢失消息。")]),t._v(" "),s("p",[t._v("【示例】发送并忘记")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("record")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CustomerCountry"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Precision Products"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"France"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("record")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"同步发送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步发送"}},[t._v("#")]),t._v(" 同步发送")]),t._v(" "),s("p",[t._v("返回一个 "),s("code",[t._v("Future")]),t._v(" 对象，调用 "),s("code",[t._v("get()")]),t._v(" 方法，会一直阻塞等待 "),s("code",[t._v("Broker")]),t._v(" 返回结果。")]),t._v(" "),s("p",[t._v("这是一种可靠传输方式，但吞吐量最差。")]),t._v(" "),s("p",[t._v("【示例】同步发送")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("record")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CustomerCountry"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Precision Products"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"France"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("record")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"异步回调发送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步回调发送"}},[t._v("#")]),t._v(" 异步回调发送")]),t._v(" "),s("p",[t._v("代码如下，异步方式相对于“发送并忽略返回”的方式的不同在于：在异步返回时可以执行一些操作，如：抛出异常、记录错误日志。")]),t._v(" "),s("p",[t._v("这是一个折中的方案，即兼顾吞吐量，也保证消息不丢失。")]),t._v(" "),s("p",[t._v("【示例】异步发送")]),t._v(" "),s("p",[t._v("首先，定义一个 callback：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoProducerCallback")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Callback")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onCompletion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RecordMetadata")]),t._v(" recordMetadata"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n               e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("然后，使用这个 callback：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("record")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProducerRecord")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CustomerCountry"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Biomedical Materials"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"USA"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nproducer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("record")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoProducerCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"三、生产者的配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、生产者的配置"}},[t._v("#")]),t._v(" 三、生产者的配置")]),t._v(" "),s("p",[t._v("核心配置：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("bootstrap.servers")]),t._v(" - broker 地址清单。")]),t._v(" "),s("li",[s("code",[t._v("key.serializer")]),t._v(" - 键的序列化器。")]),t._v(" "),s("li",[s("code",[t._v("value.serializer")]),t._v(" - 值的序列化器。")])]),t._v(" "),s("h2",{attrs:{id:"四、序列化器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、序列化器"}},[t._v("#")]),t._v(" 四、序列化器")]),t._v(" "),s("p",[t._v("Kafka 内置了常用 Java 基础类型的序列化器，如："),s("code",[t._v("StringSerializer")]),t._v("、"),s("code",[t._v("IntegerSerializer")]),t._v("、"),s("code",[t._v("DoubleSerializer")]),t._v(" 等。")]),t._v(" "),s("p",[t._v("但如果要传输较为复杂的对象，推荐使用序列化性能更高的工具，如：Avro、Thrift、Protobuf 等。")]),t._v(" "),s("p",[t._v("使用方式是通过实现 "),s("code",[t._v("org.apache.kafka.common.serialization.Serializer")]),t._v(" 接口来引入自定义的序列化器。")]),t._v(" "),s("h2",{attrs:{id:"五、分区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、分区"}},[t._v("#")]),t._v(" 五、分区")]),t._v(" "),s("p",[t._v("前文中已经提到，Kafka 生产者发送消息使用的对象 "),s("code",[t._v("ProducerRecord")]),t._v(" ，可以选填 Partition 和 Key。")]),t._v(" "),s("p",[t._v("当指定这两个参数时，意味着：会将特定的 key 发送给指定分区。")]),t._v(" "),s("blockquote",[s("p",[t._v("说明：某些场景下，可能会要求按序发送消息。")]),t._v(" "),s("p",[t._v("Kafka 的 Topic 如果是单分区，自然是有序的。但是，Kafka 是基于分区实现其高并发性的，如果使用单 partition，会严重降低 Kafka 的吞吐量。所以，这不是一个合理的方案。")]),t._v(" "),s("p",[t._v("还有一种方案是：生产者将同一个 key 的消息发送给指定分区，这可以保证同一个 key 在这个分区中是有序的。然后，消费者为每个 key 设定一个缓存队列，然后让一个独立线程负责消费指定 key 的队列，这就保证了消费消息也是有序的。")])]),t._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("官方")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://kafka.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kakfa 官网"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/apache/kafka",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kakfa Github"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://kafka.apache.org/documentation/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kakfa 官方文档"),s("OutboundLink")],1)])])]),t._v(" "),s("li",[s("strong",[t._v("书籍")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://item.jd.com/12270295.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Kafka 权威指南》"),s("OutboundLink")],1)])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);